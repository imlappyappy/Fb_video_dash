{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "New_Videos_Views",
    "datasource": {
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Fb_video_dashboard_datasrc",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Facebook",
    "actionConfiguration": {
      "timeoutInMillisecond": 15000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "with CTE_sumtotal as (\n\tSELECT video_id,title,name,created_time,\n\tcast(total_video_views as decimal) as Total_Video_Views,\n\tcast(total_video_view_total_time as decimal) as Total_Watch_Hrs,\n\tcast(total_video_impressions as decimal)/1000 as Revenue\n\tFROM public.smg_dmp_fb_video_dashboard_unq_view \n\tWHERE case when '{{End_date.selectedDate}}':: date > '{{moment().add(-1,'day')}}':: date\n\t\tthen view_date = '{{moment().add(-1,'day')}}':: date \n\telse \n\t\tview_date = '{{End_date.selectedDate}}':: date end\n\tand length(title) > 0\nAND created_time >= '{{Start_date.selectedDate}}'\n  AND created_time <= '{{End_date.selectedDate}}'\nAND name like {{Domain_select.selectedOptionValue ? Domain_select.selectedOptionValue : \"%\"}}),\nCTE_view_date as (\n\tSELECT video_id,title,name,created_time,\n\tcast(total_video_views as decimal) as Total_Video_Views,\n\tcast(total_video_view_total_time as decimal) as Total_Watch_Hrs,\n\tcast(total_video_impressions as decimal)/1000 as Revenue\n\tFROM public.smg_dmp_fb_video_dashboard_unq_view \n\tWHERE view_date = '{{Start_date.selectedDate}}':: date\n\tand length(title) > 0\nAND created_time >= '{{Start_date.selectedDate}}'\n  AND created_time <= '{{End_date.selectedDate}}'\nAND name like {{Domain_select.selectedOptionValue ? Domain_select.selectedOptionValue : \"%\"}})\nselect coalesce(CTE_sumtotal.title,CTE_view_date.title) as V_title,\nCTE_sumtotal.name as channel,\nCTE_sumtotal.created_time as Time_Published,\nSUM(case when '{{Start_date.selectedDate}}' < CTE_sumtotal.created_time then CTE_sumtotal.Total_Video_Views else CTE_sumtotal.Total_Video_Views-CTE_view_date.Total_Video_Views end) as Total_Video_Views,\nSUM(case when '{{Start_date.selectedDate}}' < CTE_sumtotal.created_time then CTE_sumtotal.Total_Watch_Hrs else CTE_sumtotal.Total_Watch_Hrs-CTE_view_date.Total_Watch_Hrs end) as Total_Watch_Hrs,\nSUM(case when '{{Start_date.selectedDate}}' < CTE_sumtotal.created_time then CTE_sumtotal.Revenue else CTE_sumtotal.Revenue-CTE_view_date.Revenue end) as Revenue\nfrom CTE_sumtotal FULL join CTE_view_date on CTE_sumtotal.video_id=CTE_view_date.video_id\nwhere length(CTE_sumtotal.name) > 0\ngroup by V_title,channel,Time_Published\norder by channel;"
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "Domain_select.selectedOptionValue ? Domain_select.selectedOptionValue : \"%\"",
      "End_date.selectedDate",
      "Start_date.selectedDate",
      "moment().add(-1,'day')"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Facebook_New_Videos_Views",
  "deleted": false,
  "gitSyncId": "62837f843cd70e097b62341a_62b996444c1f4b56d4d33d86"
}